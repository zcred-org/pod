/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CredentialsImport } from './routes/credentials'
import { Route as CredentialIssueImport } from './routes/credential-issue'
import { Route as ProveRouteImport } from './routes/prove/route'
import { Route as IndexImport } from './routes/index'
import { Route as CredentialIdImport } from './routes/credential.$id'

// Create/Update Routes

const CredentialsRoute = CredentialsImport.update({
  path: '/credentials',
  getParentRoute: () => rootRoute,
} as any)

const CredentialIssueRoute = CredentialIssueImport.update({
  path: '/credential-issue',
  getParentRoute: () => rootRoute,
} as any)

const ProveRouteRoute = ProveRouteImport.update({
  path: '/prove',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CredentialIdRoute = CredentialIdImport.update({
  path: '/credential/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/prove': {
      id: '/prove'
      path: '/prove'
      fullPath: '/prove'
      preLoaderRoute: typeof ProveRouteImport
      parentRoute: typeof rootRoute
    }
    '/credential-issue': {
      id: '/credential-issue'
      path: '/credential-issue'
      fullPath: '/credential-issue'
      preLoaderRoute: typeof CredentialIssueImport
      parentRoute: typeof rootRoute
    }
    '/credentials': {
      id: '/credentials'
      path: '/credentials'
      fullPath: '/credentials'
      preLoaderRoute: typeof CredentialsImport
      parentRoute: typeof rootRoute
    }
    '/credential/$id': {
      id: '/credential/$id'
      path: '/credential/$id'
      fullPath: '/credential/$id'
      preLoaderRoute: typeof CredentialIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  ProveRouteRoute,
  CredentialIssueRoute,
  CredentialsRoute,
  CredentialIdRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/prove",
        "/credential-issue",
        "/credentials",
        "/credential/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/prove": {
      "filePath": "prove/route.tsx"
    },
    "/credential-issue": {
      "filePath": "credential-issue.tsx"
    },
    "/credentials": {
      "filePath": "credentials.tsx"
    },
    "/credential/$id": {
      "filePath": "credential.$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
